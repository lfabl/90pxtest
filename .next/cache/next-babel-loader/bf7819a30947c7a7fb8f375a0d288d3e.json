{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport ExpandableMenu from '../expandableMenu';\nimport ExpandableSearch from '../expandableSearch';\nimport { container as style_container, table as style_table, content as style_content, mobileMenuItem as style_mobileMenuItem } from './index.module.css';\n\nconst HeaderMenu = ({\n  image,\n  searchBox,\n  searchAction,\n  menu\n}) => {\n  const {\n    0: isOpenMobileMenu,\n    1: setIsOpenMobileMenu\n  } = useState(false);\n  const {\n    0: path,\n    1: setPath\n  } = useState(\"/\");\n  const {\n    0: screenWidth,\n    1: setScreenWidth\n  } = useState(0);\n\n  const handleResize = e => {\n    setScreenWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    setPath(window.location.pathname);\n    setScreenWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.addEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: style_container\n  }, __jsx(\"div\", {\n    className: style_table\n  }, __jsx(\"div\", {\n    className: style_content\n  }, __jsx(\"img\", {\n    src: image.url,\n    width: image.width,\n    height: image.height ? image.height : \"auto\"\n  }), __jsx(ExpandableMenu, {\n    key: menu.key,\n    data: menu.data,\n    path: path,\n    onUpdateMobileMenuState: e => setIsOpenMobileMenu(e)\n  }), __jsx(ExpandableSearch, {\n    value: searchBox.searchValue,\n    onChange: searchBox.onChageSearchText,\n    placeholder: searchBox.placeholder,\n    icon: searchBox.icon,\n    setIsOpenMobileMenu: setIsOpenMobileMenu,\n    screenWidth: screenWidth,\n    onClick: searchAction\n  })), isOpenMobileMenu ? __jsx(\"div\", null, menu.data.map((item, index) => {\n    return __jsx(Link, {\n      key: \"mobileMenu\" + index,\n      href: item.url\n    }, __jsx(\"div\", {\n      className: style_mobileMenuItem,\n      style: {\n        color: item.url === path ? 'goldenrod' : \"black\"\n      }\n    }, item.title));\n  })) : null));\n};\n\nexport default HeaderMenu;","map":null,"metadata":{},"sourceType":"module"}