{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Works\\\\customer\\\\nextjs-blog\\\\pages\\\\search\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Layout from \"../../layout\";\nimport Breadcrumbs from '../../components/breadcrumbs';\nimport Toolbox from \"../../components/toolbox\";\nimport { title as style_title } from './index.module.css';\n\nvar Search = function Search(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(\"/\"),\n      path = _useState[0],\n      setPath = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      toolBoxSearchValue = _useState3[0],\n      setToolBoxSearchValue = _useState3[1];\n\n  useEffect(function () {\n    setPath(window.location.pathname);\n\n    var _searchText = window.location.search.replace(\"?s=\", \"\");\n\n    setSearchText(_searchText.replace(/%20/g, \" \"));\n  }, []);\n  useEffect(function () {\n    setPath(window.location.pathname);\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }, __jsx(Breadcrumbs, {\n    data: [{\n      title: \"Home\",\n      url: \"/\"\n    }, {\n      title: \"Search results for \" + searchText.toString(),\n      selected: true\n    }],\n    path: path,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"table\",\n      marginTop: 20,\n      marginBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"table-cell\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      paddingLeft: \"10%\",\n      paddingRight: \"10%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(Toolbox, {\n    position: \"relative\",\n    button: {\n      label: \"Search\",\n      props: {\n        variant: \"contained\",\n        color: \"primary\"\n      }\n    },\n    search: {\n      value: toolBoxSearchValue,\n      onChange: function onChange(e) {\n        return setToolBoxSearchValue(e.target.value);\n      }\n    },\n    year: {\n      key: \"toolboxYear\",\n      id: \"dropdown-item-button\",\n      title: \"Year\",\n      data: [{\n        value: \"Any\",\n        \"default\": true\n      }, {\n        value: \"2019\"\n      }, {\n        value: \"2020\"\n      }]\n    },\n    type: {\n      key: \"toolboxType\",\n      id: \"dropdown-item-button\",\n      title: \"Type\",\n      data: [{\n        value: \"Any\",\n        \"default\": true\n      }, {\n        value: \"Series\"\n      }, {\n        value: \"Movie\"\n      }, {\n        value: \"Episode\"\n      }]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      paddingLeft: \"10%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: style_title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Search result for \", __jsx(\"span\", {\n    style: {\n      color: \"goldenrod\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 59\n    }\n  }, searchText))));\n};\n\n_s(Search, \"v0scT3bOf9DOGCz/6kgkIJA6wXg=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/pages/search/index.js"],"names":["useEffect","useState","Layout","Breadcrumbs","Toolbox","title","style_title","Search","path","setPath","searchText","setSearchText","toolBoxSearchValue","setToolBoxSearchValue","window","location","pathname","_searchText","search","replace","url","toString","selected","width","display","marginTop","marginBottom","paddingLeft","paddingRight","label","props","variant","color","value","onChange","e","target","key","id","data"],"mappings":"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","sourcesContent":["import {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport Breadcrumbs from '../../components/breadcrumbs';\r\nimport Toolbox from \"../../components/toolbox\";\r\nimport {\r\n    title as style_title\r\n} from './index.module.css';\r\n\r\nconst Search = ({\r\n\r\n}) => {\r\n    const [path, setPath] = useState(\"/\");\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [toolBoxSearchValue, setToolBoxSearchValue] = useState(\"\");\r\n    useEffect(() => {\r\n        setPath(window.location.pathname);\r\n        const _searchText = window.location.search.replace(\"?s=\", \"\");\r\n        setSearchText(_searchText.replace(/%20/g, \" \"));\r\n    }, []);\r\n    useEffect(() => {\r\n        setPath(window.location.pathname);\r\n    });\r\n    return <Layout>\r\n        <Breadcrumbs\r\n            data={[\r\n                {\r\n                    title: \"Home\",\r\n                    url: \"/\"\r\n                },\r\n                {\r\n                    title: \"Search results for \" + searchText.toString(),\r\n                    selected: true\r\n                }\r\n            ]}\r\n            path={path}\r\n        />\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                display: \"table\",\r\n                marginTop: 20,\r\n                marginBottom: 40\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"table-cell\"\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        paddingLeft: \"10%\",\r\n                        paddingRight: \"10%\",\r\n                    }}\r\n                >\r\n                    <Toolbox\r\n                        position=\"relative\"\r\n                        button={{\r\n                            label: \"Search\",\r\n                            props: {\r\n                                variant: \"contained\",\r\n                                color: \"primary\"\r\n                            }\r\n                        }}\r\n                        search={{\r\n                            value: toolBoxSearchValue,\r\n                            onChange: (e) => setToolBoxSearchValue(e.target.value)\r\n                        }}\r\n                        year={{\r\n                            key: \"toolboxYear\",\r\n                            id: \"dropdown-item-button\",\r\n                            title: \"Year\",\r\n                            data: [\r\n                                {\r\n                                    value: \"Any\",\r\n                                    default: true\r\n                                },\r\n                                {\r\n                                    value: \"2019\"\r\n                                },\r\n                                {\r\n                                    value: \"2020\"\r\n                                }\r\n                            ]\r\n                        }}\r\n                        type={{\r\n                            key: \"toolboxType\",\r\n                            id: \"dropdown-item-button\",\r\n                            title: \"Type\",\r\n                            data: [\r\n                                {\r\n                                    value: \"Any\",\r\n                                    default: true\r\n                                },\r\n                                {\r\n                                    value: \"Series\"\r\n                                },\r\n                                {\r\n                                    value: \"Movie\"\r\n                                },\r\n                                {\r\n                                    value: \"Episode\"\r\n                                }\r\n                            ]\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div\r\n            style={{\r\n                paddingLeft: \"10%\"\r\n            }}\r\n        >\r\n            <h2 className={style_title}>Search result for <span style={{ color: \"goldenrod\" }}>{searchText}</span></h2>\r\n        </div>\r\n    </Layout>\r\n};\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}