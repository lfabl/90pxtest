{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Works\\\\customer\\\\nextjs-blog\\\\pages\\\\search\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Layout from \"../../layout\";\nimport Breadcrumbs from '../../components/breadcrumbs';\nimport Toolbox from \"../../components/toolbox\";\nimport { title as style_title } from './index.module.css';\nimport { API_KEY, HOST } from \"../../constants\";\nimport { asyncForEach, getUrlVars } from \"../../helpers\";\nimport api from \"../../server\";\nimport FilmCard from \"../../components/filmCard\";\n\nvar Search = function Search(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(\"/\"),\n      path = _useState[0],\n      setPath = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      toolBoxSearchValue = _useState3[0],\n      setToolBoxSearchValue = _useState3[1];\n\n  var _useState4 = useState(null),\n      err = _useState4[0],\n      setErr = _useState4[1];\n\n  var _useState5 = useState([]),\n      searchedFilms = _useState5[0],\n      setSearchedFilms = _useState5[1];\n\n  var _useState6 = useState(null),\n      year = _useState6[0],\n      setYear = _useState6[1];\n\n  var _useState7 = useState(null),\n      type = _useState7[0],\n      setType = _useState7[1];\n\n  var _useState8 = useState(null),\n      updateSearch = _useState8[0],\n      setUpdateSearch = _useState8[1];\n\n  var search = function search(_ref2) {\n    var s = _ref2.s,\n        type = _ref2.type,\n        y = _ref2.y;\n    var mainParameters = {\n      apikey: API_KEY,\n      type: 'movie',\n      r: 'json',\n      s: s\n    };\n    if (type) mainParameters.type = type;\n    if (y) mainParameters.y = y;\n    var mainQuery = new URLSearchParams(mainParameters);\n    api({\n      url: HOST + '?' + mainQuery\n    }).then( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res) {\n        var fullyData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(res.Response === 'True')) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                fullyData = [];\n                _context2.next = 4;\n                return asyncForEach(res.Search, /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n                    var itemParameters, itemQuery, response, itemData;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            itemParameters = {\n                              apikey: API_KEY,\n                              plot: 'short',\n                              type: 'movie',\n                              r: 'json',\n                              i: item.imdbID\n                            };\n                            itemQuery = new URLSearchParams(itemParameters);\n                            _context.next = 4;\n                            return api({\n                              url: HOST + '?' + itemQuery\n                            });\n\n                          case 4:\n                            response = _context.sent;\n                            itemData = JSON.parse(JSON.stringify(response));\n                            fullyData.push(itemData);\n\n                          case 7:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n\n              case 4:\n                setSearchedFilms(fullyData);\n                setSearchText(s);\n                _context2.next = 9;\n                break;\n\n              case 8:\n                setErr({\n                  message: res['Error']\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }())[\"catch\"](function (err) {\n      alert(err.message);\n    });\n  };\n\n  useEffect(function () {\n    setPath(window.location.pathname);\n\n    var _searchJSON = getUrlVars(window.location.href);\n\n    var _searchText = _searchJSON.s.replace(\"?s=\", \"\").replace(/%20/g, \" \");\n\n    setSearchText(_searchText);\n    var params = {\n      s: _searchText\n    };\n    if (_searchJSON.type) params.type = _searchJSON.type;\n    if (_searchJSON.y) params.y = _searchJSON.y;\n    search(params);\n  }, []);\n  useEffect(function () {\n    setPath(window.location.pathname);\n  });\n  useEffect(function () {\n    if (updateSearch) search(updateSearch);\n  }, [updateSearch]);\n  useEffect(function () {\n    setUpdateSearch(null);\n  }, [searchedFilms]);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }\n  }, __jsx(Breadcrumbs, {\n    data: [{\n      title: \"Home\",\n      url: \"/\"\n    }, {\n      title: \"Search results for \" + searchText.toString(),\n      selected: true\n    }],\n    path: path,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"table\",\n      marginTop: 20,\n      marginBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"table-cell\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      paddingLeft: \"10%\",\n      paddingRight: \"10%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, __jsx(Toolbox, {\n    position: \"relative\",\n    button: {\n      label: \"Search\",\n      props: {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          setUpdateSearch({\n            s: toolBoxSearchValue,\n            type: type,\n            y: year\n          });\n        }\n      }\n    },\n    search: {\n      value: toolBoxSearchValue,\n      onChange: function onChange(e) {\n        return setToolBoxSearchValue(e.target.value);\n      }\n    },\n    year: {\n      key: \"toolboxYear\",\n      id: \"dropdown-item-button\",\n      title: \"Year\",\n      onChange: function onChange(event) {\n        return setYear(event.target.value);\n      },\n      data: [{\n        value: \"Any\",\n        \"default\": true\n      }, {\n        value: \"2019\"\n      }, {\n        value: \"2020\"\n      }]\n    },\n    type: {\n      key: \"toolboxType\",\n      id: \"dropdown-item-button\",\n      title: \"Type\",\n      onChange: function onChange(event) {\n        return setType(event.target.value);\n      },\n      data: [{\n        value: \"Any\",\n        \"default\": true\n      }, {\n        value: \"Series\"\n      }, {\n        value: \"Movie\"\n      }, {\n        value: \"Episode\"\n      }]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })))), __jsx(\"h2\", {\n    className: style_title,\n    style: {\n      paddingRight: \"10%\",\n      paddingLeft: \"10%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, \"Search result for \", __jsx(\"span\", {\n    style: {\n      color: \"goldenrod\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 31\n    }\n  }, searchText)), __jsx(\"div\", {\n    style: {\n      paddingRight: \"10%\",\n      paddingLeft: \"10%\",\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, searchedFilms && searchedFilms.length && updateSearch === null ? searchedFilms.map(function (film, filmIndex) {\n    return __jsx(FilmCard, {\n      imdbID: film.imdbID,\n      index: filmIndex,\n      title: film.Title,\n      image: film.Poster,\n      content: film.Plot,\n      imdbPoint: film.imdbRating,\n      key: \"film-\" + filmIndex,\n      year: film.Year,\n      direction: \"column\",\n      style: {\n        marginLeft: 8,\n        marginRight: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 32\n      }\n    });\n  }) : err ? err.message : __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      paddingTop: 40,\n      paddingBottom: 40,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontFamily: 'Poppins'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 39\n    }\n  }, \"Y\\xFCkleniyor...\")));\n};\n\n_s(Search, \"2e5D2lzyfVMb/6eIm/VjaSCBu8c=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/pages/search/index.js"],"names":["useEffect","useState","Layout","Breadcrumbs","Toolbox","title","style_title","API_KEY","HOST","asyncForEach","getUrlVars","api","FilmCard","Search","path","setPath","searchText","setSearchText","toolBoxSearchValue","setToolBoxSearchValue","err","setErr","searchedFilms","setSearchedFilms","year","setYear","type","setType","updateSearch","setUpdateSearch","search","s","y","mainParameters","apikey","r","mainQuery","URLSearchParams","url","then","res","Response","fullyData","item","itemParameters","plot","i","imdbID","itemQuery","response","itemData","JSON","parse","stringify","push","message","alert","window","location","pathname","_searchJSON","href","_searchText","replace","params","toString","selected","width","display","marginTop","marginBottom","paddingLeft","paddingRight","label","props","variant","color","onClick","value","onChange","e","target","key","id","event","data","flexWrap","length","map","film","filmIndex","Title","Poster","Plot","imdbRating","Year","marginLeft","marginRight","paddingTop","paddingBottom","justifyContent","alignItems","fontFamily"],"mappings":"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","sourcesContent":["import {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport Breadcrumbs from '../../components/breadcrumbs';\r\nimport Toolbox from \"../../components/toolbox\";\r\nimport {\r\n    title as style_title\r\n} from './index.module.css';\r\nimport {\r\n    API_KEY,\r\n    HOST\r\n} from \"../../constants\";\r\nimport {\r\n    asyncForEach, getUrlVars\r\n} from \"../../helpers\";\r\nimport api from \"../../server\";\r\nimport FilmCard from \"../../components/filmCard\";\r\n\r\nconst Search = ({\r\n\r\n}) => {\r\n    const [path, setPath] = useState(\"/\");\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [toolBoxSearchValue, setToolBoxSearchValue] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n    const [searchedFilms, setSearchedFilms] = useState([]);\r\n    const [year, setYear] = useState(null);\r\n    const [type, setType] = useState(null);\r\n    const [updateSearch, setUpdateSearch] = useState(null);\r\n    const search = ({\r\n        s,\r\n        type,\r\n        y\r\n    }) => {\r\n        let mainParameters = {\r\n\t\t\tapikey: API_KEY,\r\n\t\t\ttype: 'movie',\r\n\t\t\tr: 'json',\r\n\t\t\ts: s\r\n        };\r\n        if(type) mainParameters.type = type;\r\n        if(y) mainParameters.y = y;\r\n\t\tconst mainQuery = new URLSearchParams(mainParameters);\r\n\t\tapi({\r\n\t\t\turl: HOST + '?' + mainQuery\r\n\t\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (res.Response === 'True') {\r\n\t\t\t\tlet fullyData = [];\r\n\t\t\t\tawait asyncForEach(res.Search, async (item) => {\r\n\t\t\t\t\tconst itemParameters = {\r\n\t\t\t\t\t\tapikey: API_KEY,\r\n\t\t\t\t\t\tplot: 'short',\r\n\t\t\t\t\t\ttype: 'movie',\r\n\t\t\t\t\t\tr: 'json',\r\n\t\t\t\t\t\ti: item.imdbID\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst itemQuery = new URLSearchParams(itemParameters);\r\n\t\t\t\t\tconst response = await api({\r\n\t\t\t\t\t\turl: HOST + '?' + itemQuery\r\n\t\t\t\t\t});\r\n                    let itemData = JSON.parse(JSON.stringify(response));\r\n\t\t\t\t\tfullyData.push(itemData);\r\n                });\r\n                setSearchedFilms(fullyData);\r\n                setSearchText(s);\r\n\t\t\t} else {\r\n\t\t\t\tsetErr({\r\n\t\t\t\t\tmessage: res['Error']\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\talert(err.message);\r\n\t\t});\r\n    }\r\n    useEffect(() => {\r\n        setPath(window.location.pathname);\r\n        const _searchJSON = getUrlVars(window.location.href);\r\n        const _searchText = _searchJSON.s.replace(\"?s=\", \"\").replace(/%20/g, \" \");\r\n        setSearchText(_searchText);\r\n        let params = {\r\n            s: _searchText\r\n        };\r\n        if(_searchJSON.type) params.type = _searchJSON.type;\r\n        if(_searchJSON.y) params.y = _searchJSON.y;\r\n        search(params);\r\n    }, []);\r\n    useEffect(() => {\r\n        setPath(window.location.pathname);\r\n    });\r\n    useEffect(() => {\r\n        if(updateSearch) search(updateSearch);\r\n    }, [updateSearch]);\r\n    useEffect(() => {\r\n        setUpdateSearch(null);\r\n    }, [searchedFilms]);\r\n    return <Layout>\r\n        <Breadcrumbs\r\n            data={[\r\n                {\r\n                    title: \"Home\",\r\n                    url: \"/\"\r\n                },\r\n                {\r\n                    title: \"Search results for \" + searchText.toString(),\r\n                    selected: true\r\n                }\r\n            ]}\r\n            path={path}\r\n        />\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                display: \"table\",\r\n                marginTop: 20,\r\n                marginBottom: 40\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"table-cell\"\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        paddingLeft: \"10%\",\r\n                        paddingRight: \"10%\",\r\n                    }}\r\n                >\r\n                    <Toolbox\r\n                        position=\"relative\"\r\n                        button={{\r\n                            label: \"Search\",\r\n                            props: {\r\n                                variant: \"contained\",\r\n                                color: \"primary\",\r\n                                onClick: () => {\r\n                                    setUpdateSearch({\r\n                                        s: toolBoxSearchValue,\r\n                                        type: type,\r\n                                        y: year\r\n                                    });\r\n                                }\r\n                            }\r\n                        }}\r\n                        search={{\r\n                            value: toolBoxSearchValue,\r\n                            onChange: (e) => setToolBoxSearchValue(e.target.value)\r\n                        }}\r\n                        year={{\r\n                            key: \"toolboxYear\",\r\n                            id: \"dropdown-item-button\",\r\n                            title: \"Year\",\r\n                            onChange: (event) => setYear(event.target.value),\r\n                            data: [\r\n                                {\r\n                                    value: \"Any\",\r\n                                    default: true\r\n                                },\r\n                                {\r\n                                    value: \"2019\"\r\n                                },\r\n                                {\r\n                                    value: \"2020\"\r\n                                }\r\n                            ]\r\n                        }}\r\n                        type={{\r\n                            key: \"toolboxType\",\r\n                            id: \"dropdown-item-button\",\r\n                            title: \"Type\",\r\n                            onChange: (event) => setType(event.target.value),\r\n                            data: [\r\n                                {\r\n                                    value: \"Any\",\r\n                                    default: true\r\n                                },\r\n                                {\r\n                                    value: \"Series\"\r\n                                },\r\n                                {\r\n                                    value: \"Movie\"\r\n                                },\r\n                                {\r\n                                    value: \"Episode\"\r\n                                }\r\n                            ]\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <h2\r\n            className={style_title}\r\n            style={{\r\n                paddingRight: \"10%\",\r\n                paddingLeft: \"10%\"\r\n            }}\r\n        >\r\n            Search result for <span style={{ color: \"goldenrod\" }}>{searchText}</span>\r\n        </h2>\r\n        <div\r\n            style={{\r\n                paddingRight: \"10%\",\r\n                paddingLeft: \"10%\",\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\"\r\n            }}\r\n        >\r\n            {\r\n                searchedFilms && searchedFilms.length && updateSearch === null ?\r\n                    searchedFilms.map((film, filmIndex) => {\r\n                        return <FilmCard\r\n                            imdbID={film.imdbID}\r\n                            index={filmIndex}\r\n                            title={film.Title}\r\n                            image={film.Poster}\r\n                            content={film.Plot}\r\n                            imdbPoint={film.imdbRating}\r\n                            key={\"film-\"+filmIndex}\r\n                            year={film.Year}\r\n                            direction=\"column\"\r\n                            style={{\r\n                                marginLeft: 8,\r\n                                marginRight: 8\r\n                            }}\r\n                        />\r\n                    })\r\n                : err ? err.message : <div\r\n                    style={{\r\n                        width: \"100%\",\r\n                        paddingTop: 40,\r\n                        paddingBottom: 40,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        fontFamily: 'Poppins'\r\n                    }}\r\n                >\r\n                    Yükleniyor...\r\n                </div>\r\n            }\r\n        </div>\r\n    </Layout>\r\n};\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}