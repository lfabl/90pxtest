{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Works\\\\customer\\\\nextjs-blog\\\\components\\\\expandableMenu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { container as style_container, menuItem as style_menuItem, menuIcon as style_menuIcon } from './index.module.css';\nimport Link from 'next/link';\nimport Icon from '@material-ui/core/Icon';\nimport { MenuSharp } from '@material-ui/icons/';\n\nvar ExpandableMenu = function ExpandableMenu(_ref) {\n  _s();\n\n  var data = _ref.data,\n      key = _ref.key,\n      onUpdateMobileMenuState = _ref.onUpdateMobileMenuState;\n\n  var _useState = useState(false),\n      isOpenMobileMenu = _useState[0],\n      setIsOpenMobileMenu = _useState[1];\n\n  var _useState2 = useState(\"/\"),\n      path = _useState2[0],\n      setPath = _useState2[1];\n\n  useEffect(function () {\n    setPath(window.location.pathname);\n  });\n  useEffect(function () {\n    if (isOpenMobileMenu) onUpdateMobileMenuState(isOpenMobileMenu);\n  }, [isOpenMobileMenu]);\n  return __jsx(\"div\", {\n    className: style_container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, data ? data.map(function (item, index) {\n    return __jsx(Link, {\n      key: key + index,\n      href: item.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 28\n      }\n    }, __jsx(\"span\", {\n      className: style_menuItem,\n      style: {\n        color: path === item.url ? \"#F5C518\" : \"#000000\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, item.title));\n  }) : null, __jsx(Icon, {\n    color: isOpenMobileMenu ? \"primary\" : \"dark\",\n    component: MenuSharp,\n    className: style_menuIcon,\n    style: {\n      fontSize: 32\n    },\n    onClick: function onClick() {\n      setIsOpenMobileMenu(!isOpenMobileMenu);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(ExpandableMenu, \"ofvf1hCH2T4wCu9EzH7igtYG50M=\");\n\n_c = ExpandableMenu;\nexport default ExpandableMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpandableMenu\");","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/components/expandableMenu/index.js"],"names":["useEffect","useState","container","style_container","menuItem","style_menuItem","menuIcon","style_menuIcon","Link","Icon","MenuSharp","ExpandableMenu","data","key","onUpdateMobileMenuState","isOpenMobileMenu","setIsOpenMobileMenu","path","setPath","window","location","pathname","map","item","index","url","color","title","fontSize"],"mappings":";;;;;;AAAA,SACIA,SADJ,EAEIC,QAFJ,QAGO,OAHP;AAIA,SACIC,SAAS,IAAIC,eADjB,EAEIC,QAAQ,IAAIC,cAFhB,EAGIC,QAAQ,IAAIC,cAHhB,QAIO,oBAJP;AAKA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SACIC,SADJ,QAEO,qBAFP;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAIjB;AAAA;;AAAA,MAHFC,IAGE,QAHFA,IAGE;AAAA,MAFFC,GAEE,QAFFA,GAEE;AAAA,MADFC,uBACE,QADFA,uBACE;;AAAA,kBAC8Cb,QAAQ,CAAC,KAAD,CADtD;AAAA,MACKc,gBADL;AAAA,MACuBC,mBADvB;;AAAA,mBAEsBf,QAAQ,CAAC,GAAD,CAF9B;AAAA,MAEKgB,IAFL;AAAA,MAEWC,OAFX;;AAGFlB,EAAAA,SAAS,CAAC,YAAM;AACZkB,IAAAA,OAAO,CAACC,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAP;AACH,GAFQ,CAAT;AAGArB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGe,gBAAH,EAAqBD,uBAAuB,CAACC,gBAAD,CAAvB;AACxB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAGA,SAAO;AAAK,IAAA,SAAS,EAAEZ,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECS,IAAI,GACAA,IAAI,CAACU,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtB,WAAO,MAAC,IAAD;AACH,MAAA,GAAG,EAAEX,GAAG,GAACW,KADN;AAEH,MAAA,IAAI,EAAED,IAAI,CAACE,GAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIH;AACI,MAAA,SAAS,EAAEpB,cADf;AAEI,MAAA,KAAK,EAAE;AACHqB,QAAAA,KAAK,EAAET,IAAI,KAAKM,IAAI,CAACE,GAAd,GAAoB,SAApB,GAAgC;AADpC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKF,IAAI,CAACI,KANV,CAJG,CAAP;AAaH,GAdD,CADA,GAiBA,IAnBL,EAqBH,MAAC,IAAD;AACI,IAAA,KAAK,EAAEZ,gBAAgB,GAAG,SAAH,GAAe,MAD1C;AAEI,IAAA,SAAS,EAAEL,SAFf;AAGI,IAAA,SAAS,EAAEH,cAHf;AAII,IAAA,KAAK,EAAE;AACHqB,MAAAA,QAAQ,EAAE;AADP,KAJX;AAOI,IAAA,OAAO,EAAE,mBAAM;AACXZ,MAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACH,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBG,CAAP;AAiCH,CA9CD;;GAAMJ,c;;KAAAA,c;AA+CN,eAAeA,cAAf","sourcesContent":["import {\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\nimport {\r\n    container as style_container,\r\n    menuItem as style_menuItem,\r\n    menuIcon as style_menuIcon\r\n} from './index.module.css';\r\nimport Link from 'next/link';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport {\r\n    MenuSharp\r\n} from '@material-ui/icons/';\r\n\r\nconst ExpandableMenu = ({\r\n    data,\r\n    key,\r\n    onUpdateMobileMenuState\r\n}) => {\r\n    const [isOpenMobileMenu, setIsOpenMobileMenu] = useState(false);\r\n    const [path, setPath] = useState(\"/\");\r\n    useEffect(() => {\r\n        setPath(window.location.pathname);\r\n    });\r\n    useEffect(() => {\r\n        if(isOpenMobileMenu) onUpdateMobileMenuState(isOpenMobileMenu);\r\n    }, [isOpenMobileMenu]);\r\n    return <div className={style_container}>\r\n        {\r\n            data ?\r\n                data.map((item, index) => {\r\n                    return <Link\r\n                        key={key+index}\r\n                        href={item.url}\r\n                    >\r\n                        <span\r\n                            className={style_menuItem}\r\n                            style={{\r\n                                color: path === item.url ? \"#F5C518\" : \"#000000\"\r\n                            }}\r\n                        >\r\n                            {item.title}\r\n                        </span>\r\n                    </Link>\r\n                })\r\n            :\r\n                null\r\n        }\r\n        <Icon\r\n            color={isOpenMobileMenu ? \"primary\" : \"dark\"}\r\n            component={MenuSharp}\r\n            className={style_menuIcon}\r\n            style={{\r\n                fontSize: 32\r\n            }}\r\n            onClick={() => {\r\n                setIsOpenMobileMenu(!isOpenMobileMenu);\r\n            }}\r\n        />\r\n    </div>\r\n};\r\nexport default ExpandableMenu;"]},"metadata":{},"sourceType":"module"}