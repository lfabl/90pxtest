{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function asyncForEach(_x, _x2) {\n  return _asyncForEach.apply(this, arguments);\n}\n\nfunction _asyncForEach() {\n  _asyncForEach = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(array, callback) {\n    var index;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            index = 0;\n\n          case 1:\n            if (!(index < array.length)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return callback(array[index], index, array);\n\n          case 4:\n            index++;\n            _context.next = 1;\n            break;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _asyncForEach.apply(this, arguments);\n}\n\nexport function getUrlVars(location) {\n  var vars = {};\n  var parts = location.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n    vars[key] = value;\n  });\n  return vars;\n}","map":null,"metadata":{},"sourceType":"module"}