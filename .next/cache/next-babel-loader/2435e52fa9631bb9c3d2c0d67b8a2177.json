{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst defaultConfigs = {\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n  }\n};\n\nconst api = (url, parameters, method = \"GET\", configs) => {\n  let _configs = configs ? _objectSpread(_objectSpread({}, configs), {}, {\n    method,\n    body: JSON.stringify(parameters)\n  }) : defaultConfigs;\n\n  console.log(_configs);\n  return new Promise((resolve, reject) => {\n    fetch(url, _configs).then(res => {\n      return res.json();\n    }).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\n\nexport default api;","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/server/index.js"],"names":["defaultConfigs","api","url","parameters","method","configs","_configs","body","JSON","stringify","console","log","Promise","resolve","reject","fetch","then","res","json","catch","err"],"mappings":";;;;;;AAAA,MAAMA,cAAc,GAAG;AACnB,YAAU,KADS;AAEnB,aAAW;AACP,oBAAgB,kBADT;AAEP,cAAU;AAFH;AAFQ,CAAvB;;AAOA,MAAMC,GAAG,GAAG,CAACC,GAAD,EAAMC,UAAN,EAAkBC,MAAM,GAAG,KAA3B,EAAkCC,OAAlC,KAA8C;AACtD,MAAIC,QAAQ,GAAGD,OAAO,mCAAQA,OAAR;AAAiBD,IAAAA,MAAjB;AAAyBG,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf;AAA/B,OAA8DH,cAApF;;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,IAAAA,KAAK,CAACb,GAAD,EAAMI,QAAN,CAAL,CACCU,IADD,CACOC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHD,EAICF,IAJD,CAIOC,GAAD,IAAS;AACXJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAND,EAOCE,KAPD,CAOQC,GAAD,IAAS;AACZN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KATD;AAUH,GAXM,CAAP;AAYH,CAfD;;AAgBA,eAAenB,GAAf","sourcesContent":["const defaultConfigs = {\r\n    \"method\": \"GET\",\r\n    \"headers\": {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n};\r\nconst api = (url, parameters, method = \"GET\", configs) => {\r\n    let _configs = configs ? { ...configs, method, body: JSON.stringify(parameters) } : defaultConfigs;\r\n    console.log(_configs);\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url, _configs)\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .then((res) => {\r\n            resolve(res);\r\n        })\r\n        .catch((err) => {\r\n            reject(err);\r\n        });\r\n    });\r\n};\r\nexport default api;"]},"metadata":{},"sourceType":"module"}