{"ast":null,"code":"var _jsxFileName = \"D:\\\\Works\\\\customer\\\\nextjs-blog\\\\context\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createContext, useContext, useReducer } from 'react';\nimport { reactLocalStorage } from 'reactjs-localstorage'; // Bu yöntem normalde tüm state'i eskisi gibi yönettiği için hook'lara göre sağlıksız.\n// Fakat elimde örneği olduğu için hızlıca kullandım.\n\nconst defaultGlobalState = {\n  myFavorites: [],\n  setFavoriteState: () => {}\n};\nconst globalStateContext = /*#__PURE__*/createContext(defaultGlobalState);\nconst dispatchStateContext = /*#__PURE__*/createContext(undefined);\n\nconst GlobalStateProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer((state, newValue) => _objectSpread(_objectSpread({}, state), newValue), defaultGlobalState);\n  const myFavorites = reactLocalStorage.get('myFavorites');\n  setGlobalState(_objectSpread(_objectSpread({}, globalState), {}, {\n    myFavorites,\n    setFavoriteState: imdbID => {\n      if (reactLocalStorage.get(\"myFavorites\")) {\n        let myFavorites = reactLocalStorage.get('myFavorites');\n\n        if (myFavorites.findIndex(e => e === imdbID) === -1) {\n          myFavorites.push(imdbID);\n        } else {\n          myFavorites = myFavorites.filter(e => e !== imdbID);\n        }\n\n        reactLocalStorage.set(\"myFavorites\", myFavorites);\n        setGlobalState(_objectSpread(_objectSpread({}, globalState), {}, {\n          myFavorites: myFavorites\n        }));\n      } else {\n        reactLocalStorage.set(\"myFavorites\", [imdbID]);\n        setGlobalState(_objectSpread(_objectSpread({}, globalState), {}, {\n          myFavorites: myFavorites\n        }));\n      }\n    }\n  }));\n  return __jsx(globalStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(dispatchStateContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, children));\n};\n\nexport const useGlobalState = () => [useContext(globalStateContext), useContext(dispatchStateContext)];\nexport default GlobalStateProvider;","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/context/index.js"],"names":["createContext","useContext","useReducer","reactLocalStorage","defaultGlobalState","myFavorites","setFavoriteState","globalStateContext","dispatchStateContext","undefined","GlobalStateProvider","children","state","dispatch","newValue","get","setGlobalState","globalState","imdbID","findIndex","e","push","filter","set","useGlobalState"],"mappings":";;;;;;;;;;AAAA,SACIA,aADJ,EAEIC,UAFJ,EAGIC,UAHJ,QAIO,OAJP;AAKA,SAASC,iBAAT,QAAkC,sBAAlC,C,CAEA;AACA;;AAEA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,WAAW,EAAE,EADU;AAEvBC,EAAAA,gBAAgB,EAAE,MAAM,CAAE;AAFH,CAA3B;AAKA,MAAMC,kBAAkB,gBAAGP,aAAa,CAACI,kBAAD,CAAxC;AACA,MAAMI,oBAAoB,gBAAGR,aAAa,CAACS,SAAD,CAA1C;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,UAAU,CAClC,CAACU,KAAD,EAAQE,QAAR,qCAA2BF,KAA3B,GAAqCE,QAArC,CADkC,EAElCV,kBAFkC,CAApC;AAIA,QAAMC,WAAW,GAAGF,iBAAiB,CAACY,GAAlB,CAAsB,aAAtB,CAApB;AACAC,EAAAA,cAAc,iCACPC,WADO;AAEVZ,IAAAA,WAFU;AAGVC,IAAAA,gBAAgB,EAAGY,MAAD,IAAY;AAC1B,UAAGf,iBAAiB,CAACY,GAAlB,CAAsB,aAAtB,CAAH,EAAyC;AACrC,YAAIV,WAAW,GAAGF,iBAAiB,CAACY,GAAlB,CAAsB,aAAtB,CAAlB;;AACA,YAAGV,WAAW,CAACc,SAAZ,CAAsBC,CAAC,IAAIA,CAAC,KAAKF,MAAjC,MAA6C,CAAC,CAAjD,EAAoD;AAChDb,UAAAA,WAAW,CAACgB,IAAZ,CAAiBH,MAAjB;AACH,SAFD,MAEO;AACHb,UAAAA,WAAW,GAAGA,WAAW,CAACiB,MAAZ,CAAmBF,CAAC,IAAIA,CAAC,KAAKF,MAA9B,CAAd;AACH;;AACDf,QAAAA,iBAAiB,CAACoB,GAAlB,CAAsB,aAAtB,EAAqClB,WAArC;AACAW,QAAAA,cAAc,iCACPC,WADO;AAEVZ,UAAAA,WAAW,EAAEA;AAFH,WAAd;AAIH,OAZD,MAYO;AACHF,QAAAA,iBAAiB,CAACoB,GAAlB,CAAsB,aAAtB,EAAqC,CAACL,MAAD,CAArC;AACAF,QAAAA,cAAc,iCACPC,WADO;AAEVZ,UAAAA,WAAW,EAAEA;AAFH,WAAd;AAIH;AACJ;AAvBS,KAAd;AAyBA,SACE,MAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEO,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF,CADF;AAOH,CAtCD;;AAwCA,OAAO,MAAMa,cAAc,GAAG,MAAM,CAChCvB,UAAU,CAACM,kBAAD,CADsB,EAEhCN,UAAU,CAACO,oBAAD,CAFsB,CAA7B;AAKP,eAAeE,mBAAf","sourcesContent":["import {\r\n    createContext,\r\n    useContext,\r\n    useReducer\r\n} from 'react';\r\nimport { reactLocalStorage } from 'reactjs-localstorage';\r\n\r\n// Bu yöntem normalde tüm state'i eskisi gibi yönettiği için hook'lara göre sağlıksız.\r\n// Fakat elimde örneği olduğu için hızlıca kullandım.\r\n\r\nconst defaultGlobalState = {\r\n    myFavorites: [],\r\n    setFavoriteState: () => {}\r\n};\r\n\r\nconst globalStateContext = createContext(defaultGlobalState);\r\nconst dispatchStateContext = createContext(undefined);\r\n\r\nconst GlobalStateProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(\r\n      (state, newValue) => ({ ...state, ...newValue }),\r\n      defaultGlobalState\r\n    );\r\n    const myFavorites = reactLocalStorage.get('myFavorites');\r\n    setGlobalState({\r\n        ...globalState,\r\n        myFavorites,\r\n        setFavoriteState: (imdbID) => {\r\n            if(reactLocalStorage.get(\"myFavorites\")) {\r\n                let myFavorites = reactLocalStorage.get('myFavorites');\r\n                if(myFavorites.findIndex(e => e === imdbID) === -1) {\r\n                    myFavorites.push(imdbID);\r\n                } else {\r\n                    myFavorites = myFavorites.filter(e => e !== imdbID);\r\n                }\r\n                reactLocalStorage.set(\"myFavorites\", myFavorites);\r\n                setGlobalState({\r\n                    ...globalState,\r\n                    myFavorites: myFavorites\r\n                });\r\n            } else {\r\n                reactLocalStorage.set(\"myFavorites\", [imdbID]);\r\n                setGlobalState({\r\n                    ...globalState,\r\n                    myFavorites: myFavorites\r\n                });\r\n            }\r\n        }\r\n    });\r\n    return (\r\n      <globalStateContext.Provider value={state}>\r\n        <dispatchStateContext.Provider value={dispatch}>\r\n          {children}\r\n        </dispatchStateContext.Provider>\r\n      </globalStateContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useGlobalState = () => [\r\n    useContext(globalStateContext),\r\n    useContext(dispatchStateContext)\r\n];\r\n\r\nexport default GlobalStateProvider;"]},"metadata":{},"sourceType":"module"}