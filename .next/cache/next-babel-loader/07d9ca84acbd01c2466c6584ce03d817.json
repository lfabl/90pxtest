{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createContext, useContext, useReducer } from 'react';\nconst defaultGlobalState = {\n  myFavorites: [],\n  setFavoriteState: () => {}\n};\nconst globalStateContext = /*#__PURE__*/createContext(defaultGlobalState);\nconst dispatchStateContext = /*#__PURE__*/createContext(undefined);\n\nconst GlobalStateProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer((state, newValue) => _objectSpread(_objectSpread({}, state), newValue), defaultGlobalState);\n  return __jsx(globalStateContext.Provider, {\n    value: state\n  }, __jsx(dispatchStateContext.Provider, {\n    value: dispatch\n  }, children));\n};\n\nexport const useGlobalState = () => [useContext(globalStateContext), useContext(dispatchStateContext)];\nexport default GlobalStateProvider;","map":null,"metadata":{},"sourceType":"module"}