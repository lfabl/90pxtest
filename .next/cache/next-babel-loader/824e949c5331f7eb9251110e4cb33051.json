{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button } from '@material-ui/core';\nimport { useGlobalState } from '../../context';\nimport { container as stlye_container, rightContainer as style_rightContainer, image as style_image, imdbRow as style_imdbRow, imdbStickerContainer as style_imdbStickerContainer, imdbSticker as style_imdbSticker, year as stlye_year, imdbPoint as style_imdbPoint } from './index.module.css';\n\nvar FilmCard = function FilmCard(_ref) {\n  var title = _ref.title,\n      imdbPoint = _ref.imdbPoint,\n      buttons = _ref.buttons,\n      index = _ref.index,\n      image = _ref.image,\n      year = _ref.year,\n      content = _ref.content,\n      imdbID = _ref.imdbID,\n      style = _ref.style,\n      direction = _ref.direction;\n\n  var _useGlobalState = useGlobalState(),\n      _useGlobalState2 = _slicedToArray(_useGlobalState, 2),\n      globalState = _useGlobalState2[0],\n      setGlobalState = _useGlobalState2[1];\n\n  var isFavorite = globalState.myFavorites.findIndex(function (e) {\n    return e === imdbID;\n  }) !== -1;\n  var containerStyleForDirection = direction && direction === \"column\" ? {\n    flexDirection: \"column\"\n  } : {};\n  var imdbStickerContainerForDirection = direction && direction === \"column\" ? {\n    marginTop: \"12px\"\n  } : {};\n  return __jsx(\"div\", {\n    key: 'films-' + index,\n    className: stlye_container,\n    style: _objectSpread(_objectSpread({}, style), containerStyleForDirection)\n  }, image !== \"N/A\" ? __jsx(\"img\", {\n    src: image,\n    height: \"200px\",\n    className: style_image,\n    style: {\n      objectFit: direction && direction === \"column\" ? \"contain\" : \"cover\",\n      maxWidth: direction && direction === \"column\" ? \"250px\" : \"auto\"\n    }\n  }) : null, __jsx(\"div\", {\n    className: style_rightContainer\n  }, imdbPoint || buttons ? __jsx(\"div\", {\n    className: style_imdbRow\n  }, imdbPoint && imdbPoint !== \"N/A\" ? __jsx(\"div\", {\n    className: style_imdbStickerContainer,\n    style: _objectSpread({}, imdbStickerContainerForDirection)\n  }, __jsx(\"span\", {\n    className: style_imdbSticker\n  }, \"IMDb\"), __jsx(\"span\", {\n    className: style_imdbPoint\n  }, imdbPoint)) : null, buttons ? buttons : null) : null, __jsx(\"span\", {\n    className: stlye_year\n  }, year), __jsx(\"h4\", {\n    style: {\n      maxWidth: direction && direction === \"column\" ? \"250px\" : \"auto\"\n    }\n  }, title), __jsx(\"p\", {\n    style: {\n      maxWidth: direction && direction === \"column\" ? \"250px\" : \"auto\"\n    }\n  }, content && content !== \"N/A\" ? content : null), __jsx(Button, {\n    variant: isFavorite ? \"outlined\" : \"contained\",\n    color: \"primary\",\n    style: {\n      marginTop: 20\n    },\n    onClick: function onClick() {\n      return globalState.setFavoriteState(imdbID);\n    }\n  }, isFavorite ? \"Added to favorites\" : \"Add to favorites\")));\n};\n\nexport default FilmCard;","map":null,"metadata":{},"sourceType":"module"}