{"ast":null,"code":"var defaultHeaders = {\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n};\n\nvar api = function api(_ref) {\n  var url = _ref.url,\n      parameters = _ref.parameters,\n      _ref$method = _ref.method,\n      method = _ref$method === void 0 ? \"GET\" : _ref$method,\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? defaultHeaders : _ref$headers;\n  return new Promise(function (resolve, reject) {\n    fetch(url, {\n      method: method,\n      body: JSON.stringify(parameters),\n      headers: headers\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      resolve(res);\n    })[\"catch\"](function (err) {\n      reject(err);\n    });\n  });\n};\n\nexport default api;","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/server/index.js"],"names":["defaultHeaders","api","url","parameters","method","headers","Promise","resolve","reject","fetch","body","JSON","stringify","then","res","json","err"],"mappings":"AAAA,IAAMA,cAAc,GAAG;AACnB,kBAAgB,kBADG;AAEnB,YAAU;AAFS,CAAvB;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAKN;AAAA,MAJFC,GAIE,QAJFA,GAIE;AAAA,MAHFC,UAGE,QAHFA,UAGE;AAAA,yBAFFC,MAEE;AAAA,MAFFA,MAEE,4BAFO,KAEP;AAAA,0BADFC,OACE;AAAA,MADFA,OACE,6BADQL,cACR;AACF,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,IAAAA,KAAK,CAACP,GAAD,EAAM;AACPE,MAAAA,MAAM,EAANA,MADO;AAEPM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,UAAf,CAFC;AAGPE,MAAAA,OAAO,EAAPA;AAHO,KAAN,CAAL,CAKCQ,IALD,CAKM,UAACC,GAAD,EAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAPD,EAQCF,IARD,CAQM,UAACC,GAAD,EAAS;AACXP,MAAAA,OAAO,CAACO,GAAD,CAAP;AACH,KAVD,WAWO,UAACE,GAAD,EAAS;AACZR,MAAAA,MAAM,CAACQ,GAAD,CAAN;AACH,KAbD;AAcH,GAfM,CAAP;AAgBH,CAtBD;;AAuBA,eAAef,GAAf","sourcesContent":["const defaultHeaders = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\"\r\n};\r\nconst api = ({\r\n    url,\r\n    parameters,\r\n    method = \"GET\",\r\n    headers = defaultHeaders\r\n}) => {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url, {\r\n            method,\r\n            body: JSON.stringify(parameters),\r\n            headers\r\n        })\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .then((res) => {\r\n            resolve(res);\r\n        })\r\n        .catch((err) => {\r\n            reject(err);\r\n        });\r\n    });\r\n};\r\nexport default api;"]},"metadata":{},"sourceType":"module"}