{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { container as style_container, content as style_content, searchbox as style_searchbox, searchIcon as style_searchIcon, inlineSearchIcon as style_inlineSearchIcon } from './index.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Icon from '@material-ui/core/Icon';\nimport { SearchSharp } from '@material-ui/icons/';\n\nconst ExpandableSearch = (_ref) => {\n  let {\n    icon,\n    screenWidth,\n    onClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"icon\", \"screenWidth\", \"onClick\"]);\n\n  return __jsx(\"div\", {\n    className: style_container\n  }, screenWidth > 750 ? __jsx(\"div\", {\n    className: style_content\n  }, __jsx(\"input\", _extends({\n    type: \"text\",\n    className: style_searchbox,\n    onKeyUp: e => {\n      if (e.keyCode === 13) {\n        onClick();\n      }\n    }\n  }, props)), icon ? __jsx(FontAwesomeIcon, _extends({}, icon, {\n    onClick: onClick,\n    className: style_inlineSearchIcon\n  })) : null) : null, __jsx(Icon, {\n    color: \"dark\",\n    component: SearchSharp,\n    className: style_searchIcon,\n    style: {\n      fontSize: 30\n    },\n    onClick: onClick\n  }));\n};\n\nexport default ExpandableSearch;","map":null,"metadata":{},"sourceType":"module"}