{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport api from '../server';\nimport { API_KEY, HOST } from '../constants';\nimport { container as style_container, safeSpace as style_safeSpace, footerSpace as style_footerSpace } from './index.module.css';\nimport Layout from '../layout';\nimport Welcome from '../components/welcome';\nimport Toolbox from '../components/toolbox';\nimport CardSlider from '../components/cardSlider';\nimport FilmCard from '../components/filmCard';\nimport { asyncForEach } from '../helpers';\nimport { useGlobalState } from '../context';\n\nvar Home = function Home() {\n  var _useGlobalState = useGlobalState(),\n      _useGlobalState2 = _slicedToArray(_useGlobalState, 2),\n      globalState = _useGlobalState2[0],\n      setGlobalState = _useGlobalState2[1];\n\n  var _useState = useState(),\n      popularFilms = _useState[0],\n      setPopularFilms = _useState[1];\n\n  var _useState2 = useState(null),\n      err = _useState2[0],\n      setErr = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      toolBoxSearchValue = _useState3[0],\n      setToolBoxSearchValue = _useState3[1];\n\n  var _useState4 = useState(null),\n      year = _useState4[0],\n      setYear = _useState4[1];\n\n  var _useState5 = useState(null),\n      type = _useState5[0],\n      setType = _useState5[1];\n\n  var search = function search() {\n    var mainParameters = {\n      s: toolBoxSearchValue\n    };\n    if (type) mainParameters.type = type;\n    if (year) mainParameters.y = year;\n    var mainQuery = new URLSearchParams(mainParameters);\n    window.location.href = \"/search?\" + mainQuery;\n  };\n\n  useEffect(function () {\n    var mainParameters = {\n      apikey: API_KEY,\n      type: 'movie',\n      r: 'json',\n      s: 'abe' // Apinin imdb point üzerinde arama bölümü olmadığı için kendim salladım bu kısmı.\n\n    };\n    var mainQuery = new URLSearchParams(mainParameters);\n    api({\n      url: HOST + '?' + mainQuery\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res) {\n        var fullyData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(res.Response === 'True')) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                fullyData = [];\n                _context2.next = 4;\n                return asyncForEach(res.Search, /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n                    var itemParameters, itemQuery, response, itemData;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            itemParameters = {\n                              apikey: API_KEY,\n                              plot: 'short',\n                              type: 'movie',\n                              r: 'json',\n                              i: item.imdbID\n                            };\n                            itemQuery = new URLSearchParams(itemParameters);\n                            _context.next = 4;\n                            return api({\n                              url: HOST + '?' + itemQuery\n                            });\n\n                          case 4:\n                            response = _context.sent;\n                            itemData = JSON.parse(JSON.stringify(response));\n                            fullyData.push(itemData);\n\n                          case 7:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 4:\n                setPopularFilms(fullyData);\n                _context2.next = 8;\n                break;\n\n              case 7:\n                setErr({\n                  message: res['Error']\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }())[\"catch\"](function (err) {\n      alert(err.message);\n    });\n  }, []);\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: style_container\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Create Next App\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  })), __jsx(\"main\", null, __jsx(Welcome, {\n    title: \"Welcome to MovieUP.\",\n    content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \",\n    toolbox: __jsx(Toolbox, {\n      button: {\n        label: \"Search\",\n        props: {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: function onClick() {\n            return search();\n          }\n        }\n      },\n      search: {\n        value: toolBoxSearchValue,\n        onChange: function onChange(e) {\n          return setToolBoxSearchValue(e.target.value);\n        }\n      },\n      year: {\n        key: \"toolboxYear\",\n        id: \"dropdown-item-button\",\n        title: \"Year\",\n        onChange: function onChange(e) {\n          return setYear(e.target.value);\n        },\n        data: [{\n          value: \"Any\",\n          \"default\": true\n        }, {\n          value: \"2019\"\n        }, {\n          value: \"2020\"\n        }]\n      },\n      type: {\n        key: \"toolboxType\",\n        id: \"dropdown-item-button\",\n        title: \"Type\",\n        onChange: function onChange(e) {\n          return setType(e.target.value);\n        },\n        data: [{\n          value: \"Any\",\n          \"default\": true\n        }, {\n          value: \"Series\"\n        }, {\n          value: \"Movie\"\n        }, {\n          value: \"Episode\"\n        }]\n      }\n    })\n  }), __jsx(\"div\", {\n    className: style_safeSpace\n  }), popularFilms && popularFilms.length ? __jsx(CardSlider, {\n    title: \"Popular Movies\"\n  }, popularFilms.map(function (film, filmIndex) {\n    return __jsx(FilmCard, {\n      imdbID: film.imdbID,\n      index: filmIndex,\n      title: film.Title,\n      image: film.Poster,\n      content: film.Plot,\n      imdbPoint: film.imdbRating,\n      key: \"film-\" + filmIndex,\n      year: film.Year\n    });\n  })) : err ? err.message : __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      paddingTop: 40,\n      paddingBottom: 40,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontFamily: 'Poppins'\n    }\n  }, \"Y\\xFCkleniyor...\"), __jsx(\"div\", {\n    className: style_footerSpace\n  }))));\n};\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}