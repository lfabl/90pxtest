{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar defaultConfigs = {\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n  }\n};\n\nvar api = function api(url, parameters, method, configs) {\n  var _configs = configs ? _objectSpread(_objectSpread({}, configs), {}, {\n    method: method,\n    body: JSON.stringify(parameters)\n  }) : defaultConfigs;\n\n  return new Promise(function (resolve, reject) {\n    fetch(url, _configs).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      resolve(res);\n    })[\"catch\"](function (err) {\n      reject(err);\n    });\n  });\n};\n\nexport default api;","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/server/index.js"],"names":["defaultConfigs","api","url","parameters","method","configs","_configs","body","JSON","stringify","Promise","resolve","reject","fetch","then","res","json","err"],"mappings":";;;;;;AAAA,IAAMA,cAAc,GAAG;AACnB,YAAU,KADS;AAEnB,aAAW;AACP,oBAAgB,kBADT;AAEP,cAAU;AAFH;AAFQ,CAAvB;;AAOA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAMC,UAAN,EAAkBC,MAAlB,EAA0BC,OAA1B,EAAsC;AAC9C,MAAIC,QAAQ,GAAGD,OAAO,mCAAQA,OAAR;AAAiBD,IAAAA,MAAM,EAANA,MAAjB;AAAyBG,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf;AAA/B,OAA8DH,cAApF;;AACA,SAAO,IAAIU,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,IAAAA,KAAK,CAACX,GAAD,EAAMI,QAAN,CAAL,CACCQ,IADD,CACM,UAACC,GAAD,EAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHD,EAICF,IAJD,CAIM,UAACC,GAAD,EAAS;AACXJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAND,WAOO,UAACE,GAAD,EAAS;AACZL,MAAAA,MAAM,CAACK,GAAD,CAAN;AACH,KATD;AAUH,GAXM,CAAP;AAYH,CAdD;;AAeA,eAAehB,GAAf","sourcesContent":["const defaultConfigs = {\r\n    \"method\": \"GET\",\r\n    \"headers\": {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n    }\r\n};\r\nconst api = (url, parameters, method, configs) => {\r\n    let _configs = configs ? { ...configs, method, body: JSON.stringify(parameters) } : defaultConfigs;\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url, _configs)\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .then((res) => {\r\n            resolve(res);\r\n        })\r\n        .catch((err) => {\r\n            reject(err);\r\n        });\r\n    });\r\n};\r\nexport default api;"]},"metadata":{},"sourceType":"module"}