{"ast":null,"code":"var _jsxFileName = \"D:\\\\Works\\\\customer\\\\nextjs-blog\\\\pages\\\\search\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Layout from \"../../layout\";\nimport Breadcrumbs from '../../components/breadcrumbs';\nimport Toolbox from \"../../components/toolbox\";\nimport { title as style_title } from './index.module.css';\nimport { API_KEY, HOST } from \"../../constants\";\nimport { asyncForEach, getUrlVars } from \"../../helpers\";\nimport api from \"../../server\";\nimport FilmCard from \"../../components/filmCard\";\n\nconst Search = ({}) => {\n  const {\n    0: path,\n    1: setPath\n  } = useState(\"/\");\n  const {\n    0: searchText,\n    1: setSearchText\n  } = useState(\"\");\n  const {\n    0: toolBoxSearchValue,\n    1: setToolBoxSearchValue\n  } = useState(\"\");\n  const {\n    0: err,\n    1: setErr\n  } = useState(null);\n  const {\n    0: searchedFilms,\n    1: setSearchedFilms\n  } = useState([]);\n  const {\n    0: year,\n    1: setYear\n  } = useState(null);\n  const {\n    0: type,\n    1: setType\n  } = useState(null);\n  const {\n    0: updateSearch,\n    1: setUpdateSearch\n  } = useState(null);\n\n  const search = ({\n    s,\n    type,\n    y\n  }) => {\n    let mainParameters = {\n      apikey: API_KEY,\n      type: 'movie',\n      r: 'json',\n      s: s\n    };\n    if (type) mainParameters.type = type;\n    if (y) mainParameters.y = y;\n    const mainQuery = new URLSearchParams(mainParameters);\n    api({\n      url: HOST + '?' + mainQuery\n    }).then(async res => {\n      if (res.Response === 'True') {\n        let fullyData = [];\n        await asyncForEach(res.Search, async item => {\n          const itemParameters = {\n            apikey: API_KEY,\n            plot: 'short',\n            type: 'movie',\n            r: 'json',\n            i: item.imdbID\n          };\n          const itemQuery = new URLSearchParams(itemParameters);\n          const response = await api({\n            url: HOST + '?' + itemQuery\n          });\n          let itemData = JSON.parse(JSON.stringify(response));\n          fullyData.push(itemData);\n        });\n        setSearchedFilms(fullyData);\n        setSearchText(s);\n      } else {\n        setErr({\n          message: res['Error']\n        });\n      }\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  useEffect(() => {\n    setPath(window.location.pathname); //const _searchText = window.location.search.replace(\"?s=\", \"\").replace(/%20/g, \" \");\n\n    const _searchJSON = getUrlVars(window.location.href);\n\n    console.log(\"DATA:\", _searchJSON);\n    setSearchText(_searchText);\n    search({\n      s: _searchText\n    });\n  }, []);\n  useEffect(() => {\n    setPath(window.location.pathname);\n  });\n  useEffect(() => {\n    if (updateSearch) search(updateSearch);\n  }, [updateSearch]);\n  useEffect(() => {\n    setUpdateSearch(null);\n  }, [searchedFilms]);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }\n  }, __jsx(Breadcrumbs, {\n    data: [{\n      title: \"Home\",\n      url: \"/\"\n    }, {\n      title: \"Search results for \" + searchText.toString(),\n      selected: true\n    }],\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"table\",\n      marginTop: 20,\n      marginBottom: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"table-cell\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      paddingLeft: \"10%\",\n      paddingRight: \"10%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, __jsx(Toolbox, {\n    position: \"relative\",\n    button: {\n      label: \"Search\",\n      props: {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          setUpdateSearch({\n            s: toolBoxSearchValue,\n            type: type,\n            y: year\n          });\n        }\n      }\n    },\n    search: {\n      value: toolBoxSearchValue,\n      onChange: e => setToolBoxSearchValue(e.target.value)\n    },\n    year: {\n      key: \"toolboxYear\",\n      id: \"dropdown-item-button\",\n      title: \"Year\",\n      onChange: event => setYear(event.target.value),\n      data: [{\n        value: \"Any\",\n        default: true\n      }, {\n        value: \"2019\"\n      }, {\n        value: \"2020\"\n      }]\n    },\n    type: {\n      key: \"toolboxType\",\n      id: \"dropdown-item-button\",\n      title: \"Type\",\n      onChange: event => setType(event.target.value),\n      data: [{\n        value: \"Any\",\n        default: true\n      }, {\n        value: \"Series\"\n      }, {\n        value: \"Movie\"\n      }, {\n        value: \"Episode\"\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  })))), __jsx(\"h2\", {\n    className: style_title,\n    style: {\n      paddingRight: \"10%\",\n      paddingLeft: \"10%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, \"Search result for \", __jsx(\"span\", {\n    style: {\n      color: \"goldenrod\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 31\n    }\n  }, searchText)), __jsx(\"div\", {\n    style: {\n      paddingRight: \"10%\",\n      paddingLeft: \"10%\",\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, searchedFilms && searchedFilms.length && updateSearch === null ? searchedFilms.map((film, filmIndex) => {\n    return __jsx(FilmCard, {\n      imdbID: film.imdbID,\n      index: filmIndex,\n      title: film.Title,\n      image: film.Poster,\n      content: film.Plot,\n      imdbPoint: film.imdbRating,\n      key: \"film-\" + filmIndex,\n      year: film.Year,\n      direction: \"column\",\n      style: {\n        marginLeft: 8,\n        marginRight: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 32\n      }\n    });\n  }) : err ? err.message : __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      paddingTop: 40,\n      paddingBottom: 40,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontFamily: 'Poppins'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 39\n    }\n  }, \"Y\\xFCkleniyor...\")));\n};\n\nexport default Search;","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/pages/search/index.js"],"names":["useEffect","useState","Layout","Breadcrumbs","Toolbox","title","style_title","API_KEY","HOST","asyncForEach","getUrlVars","api","FilmCard","Search","path","setPath","searchText","setSearchText","toolBoxSearchValue","setToolBoxSearchValue","err","setErr","searchedFilms","setSearchedFilms","year","setYear","type","setType","updateSearch","setUpdateSearch","search","s","y","mainParameters","apikey","r","mainQuery","URLSearchParams","url","then","res","Response","fullyData","item","itemParameters","plot","i","imdbID","itemQuery","response","itemData","JSON","parse","stringify","push","message","catch","alert","window","location","pathname","_searchJSON","href","console","log","_searchText","toString","selected","width","display","marginTop","marginBottom","paddingLeft","paddingRight","label","props","variant","color","onClick","value","onChange","e","target","key","id","event","data","default","flexWrap","length","map","film","filmIndex","Title","Poster","Plot","imdbRating","Year","marginLeft","marginRight","paddingTop","paddingBottom","justifyContent","alignItems","fontFamily"],"mappings":"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","sourcesContent":["import {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport Breadcrumbs from '../../components/breadcrumbs';\r\nimport Toolbox from \"../../components/toolbox\";\r\nimport {\r\n    title as style_title\r\n} from './index.module.css';\r\nimport {\r\n    API_KEY,\r\n    HOST\r\n} from \"../../constants\";\r\nimport {\r\n    asyncForEach, getUrlVars\r\n} from \"../../helpers\";\r\nimport api from \"../../server\";\r\nimport FilmCard from \"../../components/filmCard\";\r\n\r\nconst Search = ({\r\n\r\n}) => {\r\n    const [path, setPath] = useState(\"/\");\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [toolBoxSearchValue, setToolBoxSearchValue] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n    const [searchedFilms, setSearchedFilms] = useState([]);\r\n    const [year, setYear] = useState(null);\r\n    const [type, setType] = useState(null);\r\n    const [updateSearch, setUpdateSearch] = useState(null);\r\n    const search = ({\r\n        s,\r\n        type,\r\n        y\r\n    }) => {\r\n        let mainParameters = {\r\n\t\t\tapikey: API_KEY,\r\n\t\t\ttype: 'movie',\r\n\t\t\tr: 'json',\r\n\t\t\ts: s\r\n        };\r\n        if(type) mainParameters.type = type;\r\n        if(y) mainParameters.y = y;\r\n\t\tconst mainQuery = new URLSearchParams(mainParameters);\r\n\t\tapi({\r\n\t\t\turl: HOST + '?' + mainQuery\r\n\t\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (res.Response === 'True') {\r\n\t\t\t\tlet fullyData = [];\r\n\t\t\t\tawait asyncForEach(res.Search, async (item) => {\r\n\t\t\t\t\tconst itemParameters = {\r\n\t\t\t\t\t\tapikey: API_KEY,\r\n\t\t\t\t\t\tplot: 'short',\r\n\t\t\t\t\t\ttype: 'movie',\r\n\t\t\t\t\t\tr: 'json',\r\n\t\t\t\t\t\ti: item.imdbID\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst itemQuery = new URLSearchParams(itemParameters);\r\n\t\t\t\t\tconst response = await api({\r\n\t\t\t\t\t\turl: HOST + '?' + itemQuery\r\n\t\t\t\t\t});\r\n                    let itemData = JSON.parse(JSON.stringify(response));\r\n\t\t\t\t\tfullyData.push(itemData);\r\n                });\r\n                setSearchedFilms(fullyData);\r\n                setSearchText(s);\r\n\t\t\t} else {\r\n\t\t\t\tsetErr({\r\n\t\t\t\t\tmessage: res['Error']\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\talert(err.message);\r\n\t\t});\r\n    }\r\n    useEffect(() => {\r\n        setPath(window.location.pathname);\r\n        //const _searchText = window.location.search.replace(\"?s=\", \"\").replace(/%20/g, \" \");\r\n        const _searchJSON = getUrlVars(window.location.href);\r\n        console.log(\"DATA:\", _searchJSON);\r\n        setSearchText(_searchText);\r\n        search({\r\n            s: _searchText\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        setPath(window.location.pathname);\r\n    });\r\n    useEffect(() => {\r\n        if(updateSearch) search(updateSearch);\r\n    }, [updateSearch]);\r\n    useEffect(() => {\r\n        setUpdateSearch(null);\r\n    }, [searchedFilms]);\r\n    return <Layout>\r\n        <Breadcrumbs\r\n            data={[\r\n                {\r\n                    title: \"Home\",\r\n                    url: \"/\"\r\n                },\r\n                {\r\n                    title: \"Search results for \" + searchText.toString(),\r\n                    selected: true\r\n                }\r\n            ]}\r\n            path={path}\r\n        />\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                display: \"table\",\r\n                marginTop: 20,\r\n                marginBottom: 40\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"table-cell\"\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        paddingLeft: \"10%\",\r\n                        paddingRight: \"10%\",\r\n                    }}\r\n                >\r\n                    <Toolbox\r\n                        position=\"relative\"\r\n                        button={{\r\n                            label: \"Search\",\r\n                            props: {\r\n                                variant: \"contained\",\r\n                                color: \"primary\",\r\n                                onClick: () => {\r\n                                    setUpdateSearch({\r\n                                        s: toolBoxSearchValue,\r\n                                        type: type,\r\n                                        y: year\r\n                                    });\r\n                                }\r\n                            }\r\n                        }}\r\n                        search={{\r\n                            value: toolBoxSearchValue,\r\n                            onChange: (e) => setToolBoxSearchValue(e.target.value)\r\n                        }}\r\n                        year={{\r\n                            key: \"toolboxYear\",\r\n                            id: \"dropdown-item-button\",\r\n                            title: \"Year\",\r\n                            onChange: (event) => setYear(event.target.value),\r\n                            data: [\r\n                                {\r\n                                    value: \"Any\",\r\n                                    default: true\r\n                                },\r\n                                {\r\n                                    value: \"2019\"\r\n                                },\r\n                                {\r\n                                    value: \"2020\"\r\n                                }\r\n                            ]\r\n                        }}\r\n                        type={{\r\n                            key: \"toolboxType\",\r\n                            id: \"dropdown-item-button\",\r\n                            title: \"Type\",\r\n                            onChange: (event) => setType(event.target.value),\r\n                            data: [\r\n                                {\r\n                                    value: \"Any\",\r\n                                    default: true\r\n                                },\r\n                                {\r\n                                    value: \"Series\"\r\n                                },\r\n                                {\r\n                                    value: \"Movie\"\r\n                                },\r\n                                {\r\n                                    value: \"Episode\"\r\n                                }\r\n                            ]\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <h2\r\n            className={style_title}\r\n            style={{\r\n                paddingRight: \"10%\",\r\n                paddingLeft: \"10%\"\r\n            }}\r\n        >\r\n            Search result for <span style={{ color: \"goldenrod\" }}>{searchText}</span>\r\n        </h2>\r\n        <div\r\n            style={{\r\n                paddingRight: \"10%\",\r\n                paddingLeft: \"10%\",\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\"\r\n            }}\r\n        >\r\n            {\r\n                searchedFilms && searchedFilms.length && updateSearch === null ?\r\n                    searchedFilms.map((film, filmIndex) => {\r\n                        return <FilmCard\r\n                            imdbID={film.imdbID}\r\n                            index={filmIndex}\r\n                            title={film.Title}\r\n                            image={film.Poster}\r\n                            content={film.Plot}\r\n                            imdbPoint={film.imdbRating}\r\n                            key={\"film-\"+filmIndex}\r\n                            year={film.Year}\r\n                            direction=\"column\"\r\n                            style={{\r\n                                marginLeft: 8,\r\n                                marginRight: 8\r\n                            }}\r\n                        />\r\n                    })\r\n                : err ? err.message : <div\r\n                    style={{\r\n                        width: \"100%\",\r\n                        paddingTop: 40,\r\n                        paddingBottom: 40,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        fontFamily: 'Poppins'\r\n                    }}\r\n                >\r\n                    Yükleniyor...\r\n                </div>\r\n            }\r\n        </div>\r\n    </Layout>\r\n};\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}