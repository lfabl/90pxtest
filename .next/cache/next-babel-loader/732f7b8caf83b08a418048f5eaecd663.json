{"ast":null,"code":"var _jsxFileName = \"D:\\\\Works\\\\customer\\\\nextjs-blog\\\\components\\\\expandableMenu\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { container as style_container, menuItem as style_menuItem, menuIcon as style_menuIcon } from './index.module.css';\nimport Link from 'next/link';\nimport Icon from '@material-ui/core/Icon';\nimport { MenuSharp } from '@material-ui/icons/';\n\nconst ExpandableMenu = ({\n  data,\n  key,\n  path,\n  onUpdateMobileMenuState\n}) => {\n  const {\n    0: isOpenMobileMenu,\n    1: setIsOpenMobileMenu\n  } = useState(false);\n  useEffect(() => {\n    if (onUpdateMobileMenuState) onUpdateMobileMenuState(isOpenMobileMenu);\n  }, [isOpenMobileMenu]);\n  return __jsx(\"div\", {\n    className: style_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }, data ? data.map((item, index) => {\n    return __jsx(Link, {\n      key: key + index,\n      href: item.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 28\n      }\n    }, __jsx(\"span\", {\n      className: style_menuItem,\n      style: {\n        color: path === item.url ? \"#F5C518\" : \"#000000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, item.title));\n  }) : null, __jsx(Icon, {\n    color: isOpenMobileMenu ? \"primary\" : \"dark\",\n    component: MenuSharp,\n    className: style_menuIcon,\n    style: {\n      fontSize: 32\n    },\n    onClick: () => {\n      setIsOpenMobileMenu(!isOpenMobileMenu);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ExpandableMenu;","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/components/expandableMenu/index.js"],"names":["useEffect","useState","container","style_container","menuItem","style_menuItem","menuIcon","style_menuIcon","Link","Icon","MenuSharp","ExpandableMenu","data","key","path","onUpdateMobileMenuState","isOpenMobileMenu","setIsOpenMobileMenu","map","item","index","url","color","title","fontSize"],"mappings":";;;AAAA,SACIA,SADJ,EAEIC,QAFJ,QAGO,OAHP;AAIA,SACIC,SAAS,IAAIC,eADjB,EAEIC,QAAQ,IAAIC,cAFhB,EAGIC,QAAQ,IAAIC,cAHhB,QAIO,oBAJP;AAKA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SACIC,SADJ,QAEO,qBAFP;;AAIA,MAAMC,cAAc,GAAG,CAAC;AACpBC,EAAAA,IADoB;AAEpBC,EAAAA,GAFoB;AAGpBC,EAAAA,IAHoB;AAIpBC,EAAAA;AAJoB,CAAD,KAKjB;AACF,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0ChB,QAAQ,CAAC,KAAD,CAAxD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGe,uBAAH,EAA4BA,uBAAuB,CAACC,gBAAD,CAAvB;AAC/B,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAGA,SAAO;AAAK,IAAA,SAAS,EAAEb,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECS,IAAI,GACAA,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtB,WAAO,MAAC,IAAD;AACH,MAAA,GAAG,EAAEP,GAAG,GAACO,KADN;AAEH,MAAA,IAAI,EAAED,IAAI,CAACE,GAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIH;AACI,MAAA,SAAS,EAAEhB,cADf;AAEI,MAAA,KAAK,EAAE;AACHiB,QAAAA,KAAK,EAAER,IAAI,KAAKK,IAAI,CAACE,GAAd,GAAoB,SAApB,GAAgC;AADpC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKF,IAAI,CAACI,KANV,CAJG,CAAP;AAaH,GAdD,CADA,GAiBA,IAnBL,EAqBH,MAAC,IAAD;AACI,IAAA,KAAK,EAAEP,gBAAgB,GAAG,SAAH,GAAe,MAD1C;AAEI,IAAA,SAAS,EAAEN,SAFf;AAGI,IAAA,SAAS,EAAEH,cAHf;AAII,IAAA,KAAK,EAAE;AACHiB,MAAAA,QAAQ,EAAE;AADP,KAJX;AAOI,IAAA,OAAO,EAAE,MAAM;AACXP,MAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACH,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBG,CAAP;AAiCH,CA3CD;;AA4CA,eAAeL,cAAf","sourcesContent":["import {\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\nimport {\r\n    container as style_container,\r\n    menuItem as style_menuItem,\r\n    menuIcon as style_menuIcon\r\n} from './index.module.css';\r\nimport Link from 'next/link';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport {\r\n    MenuSharp\r\n} from '@material-ui/icons/';\r\n\r\nconst ExpandableMenu = ({\r\n    data,\r\n    key,\r\n    path,\r\n    onUpdateMobileMenuState\r\n}) => {\r\n    const [isOpenMobileMenu, setIsOpenMobileMenu] = useState(false);\r\n    useEffect(() => {\r\n        if(onUpdateMobileMenuState) onUpdateMobileMenuState(isOpenMobileMenu);\r\n    }, [isOpenMobileMenu]);\r\n    return <div className={style_container}>\r\n        {\r\n            data ?\r\n                data.map((item, index) => {\r\n                    return <Link\r\n                        key={key+index}\r\n                        href={item.url}\r\n                    >\r\n                        <span\r\n                            className={style_menuItem}\r\n                            style={{\r\n                                color: path === item.url ? \"#F5C518\" : \"#000000\"\r\n                            }}\r\n                        >\r\n                            {item.title}\r\n                        </span>\r\n                    </Link>\r\n                })\r\n            :\r\n                null\r\n        }\r\n        <Icon\r\n            color={isOpenMobileMenu ? \"primary\" : \"dark\"}\r\n            component={MenuSharp}\r\n            className={style_menuIcon}\r\n            style={{\r\n                fontSize: 32\r\n            }}\r\n            onClick={() => {\r\n                setIsOpenMobileMenu(!isOpenMobileMenu);\r\n            }}\r\n        />\r\n    </div>\r\n};\r\nexport default ExpandableMenu;"]},"metadata":{},"sourceType":"module"}