{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Works\\\\customer\\\\nextjs-blog\\\\pages\\\\search\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Layout from \"../../layout\";\nimport Breadcrumbs from '../../components/breadcrumbs';\nimport Toolbox from \"../../components/toolbox\";\n\nvar Search = function Search(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(\"/\"),\n      path = _useState[0],\n      setPath = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      toolBoxSearchValue = _useState3[0],\n      setToolBoxSearchValue = _useState3[1];\n\n  useEffect(function () {\n    setPath(window.location.pathname);\n\n    var _searchText = window.location.search.replace(\"?s=\", \"\");\n\n    setSearchText(_searchText);\n  }, []);\n  useEffect(function () {\n    setPath(window.location.pathname);\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, __jsx(Breadcrumbs, {\n    data: [{\n      title: \"Home\",\n      url: \"/\"\n    }, {\n      title: \"Search results for \" + searchText.toString(),\n      selected: true\n    }],\n    path: path,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"table\",\n      position: \"relative\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Toolbox, {\n    button: {\n      label: \"Search\",\n      props: {\n        variant: \"contained\",\n        color: \"primary\"\n      }\n    },\n    search: {\n      value: toolBoxSearchValue,\n      onChange: function onChange(e) {\n        return setToolBoxSearchValue(e.target.value);\n      }\n    },\n    year: {\n      key: \"toolboxYear\",\n      id: \"dropdown-item-button\",\n      title: \"Year\",\n      data: [{\n        value: \"Any\",\n        \"default\": true\n      }, {\n        value: \"2019\"\n      }, {\n        value: \"2020\"\n      }]\n    },\n    type: {\n      key: \"toolboxType\",\n      id: \"dropdown-item-button\",\n      title: \"Type\",\n      data: [{\n        value: \"Any\",\n        \"default\": true\n      }, {\n        value: \"Series\"\n      }, {\n        value: \"Movie\"\n      }, {\n        value: \"Episode\"\n      }]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })));\n};\n\n_s(Search, \"v0scT3bOf9DOGCz/6kgkIJA6wXg=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/pages/search/index.js"],"names":["useEffect","useState","Layout","Breadcrumbs","Toolbox","Search","path","setPath","searchText","setSearchText","toolBoxSearchValue","setToolBoxSearchValue","window","location","pathname","_searchText","search","replace","title","url","toString","selected","width","display","position","label","props","variant","color","value","onChange","e","target","key","id","data"],"mappings":"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","sourcesContent":["import {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport Breadcrumbs from '../../components/breadcrumbs';\r\nimport Toolbox from \"../../components/toolbox\";\r\n\r\nconst Search = ({\r\n\r\n}) => {\r\n    const [path, setPath] = useState(\"/\");\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [toolBoxSearchValue, setToolBoxSearchValue] = useState(\"\");\r\n    useEffect(() => {\r\n        setPath(window.location.pathname);\r\n        const _searchText = window.location.search.replace(\"?s=\", \"\");\r\n        setSearchText(_searchText);\r\n    }, []);\r\n    useEffect(() => {\r\n        setPath(window.location.pathname);\r\n    });\r\n    return <Layout>\r\n        <Breadcrumbs\r\n            data={[\r\n                {\r\n                    title: \"Home\",\r\n                    url: \"/\"\r\n                },\r\n                {\r\n                    title: \"Search results for \" + searchText.toString(),\r\n                    selected: true\r\n                }\r\n            ]}\r\n            path={path}\r\n        />\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                display: \"table\",\r\n                position: \"relative\"\r\n            }}\r\n        >\r\n            <Toolbox\r\n                button={{\r\n                    label: \"Search\",\r\n                    props: {\r\n                        variant: \"contained\",\r\n                        color: \"primary\"\r\n                    }\r\n                }}\r\n                search={{\r\n                    value: toolBoxSearchValue,\r\n                    onChange: (e) => setToolBoxSearchValue(e.target.value)\r\n                }}\r\n                year={{\r\n                    key: \"toolboxYear\",\r\n                    id: \"dropdown-item-button\",\r\n                    title: \"Year\",\r\n                    data: [\r\n                        {\r\n                            value: \"Any\",\r\n                            default: true\r\n                        },\r\n                        {\r\n                            value: \"2019\"\r\n                        },\r\n                        {\r\n                            value: \"2020\"\r\n                        }\r\n                    ]\r\n                }}\r\n                type={{\r\n                    key: \"toolboxType\",\r\n                    id: \"dropdown-item-button\",\r\n                    title: \"Type\",\r\n                    data: [\r\n                        {\r\n                            value: \"Any\",\r\n                            default: true\r\n                        },\r\n                        {\r\n                            value: \"Series\"\r\n                        },\r\n                        {\r\n                            value: \"Movie\"\r\n                        },\r\n                        {\r\n                            value: \"Episode\"\r\n                        }\r\n                    ]\r\n                }}\r\n            />\r\n        </div>\r\n    </Layout>\r\n};\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}