{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport api from '../server';\nimport { API_KEY, HOST } from '../constants';\nimport { container as style_container, safeSpace as style_safeSpace, footerSpace as style_footerSpace } from './index.module.css';\nimport Layout from '../layout';\nimport Welcome from '../components/welcome';\nimport Toolbox from '../components/toolbox';\nimport CardSlider from '../components/cardSlider';\nimport FilmCard from '../components/filmCard';\nimport { asyncForEach } from '../helpers';\nimport { useGlobalState } from '../context';\n\nconst Home = () => {\n  const [globalState, setGlobalState] = useGlobalState();\n  const {\n    0: popularFilms,\n    1: setPopularFilms\n  } = useState();\n  const {\n    0: err,\n    1: setErr\n  } = useState(null);\n  const {\n    0: toolBoxSearchValue,\n    1: setToolBoxSearchValue\n  } = useState(\"\");\n  const {\n    0: year,\n    1: setYear\n  } = useState(null);\n  const {\n    0: type,\n    1: setType\n  } = useState(null);\n\n  const search = () => {\n    let mainParameters = {\n      s: toolBoxSearchValue\n    };\n    if (type) mainParameters.type = type;\n    if (year) mainParameters.y = year;\n    const mainQuery = new URLSearchParams(mainParameters);\n    window.location.href = \"/search?\" + mainQuery;\n  };\n\n  useEffect(() => {\n    const mainParameters = {\n      apikey: API_KEY,\n      type: 'movie',\n      r: 'json',\n      s: 'abe' // Apinin imdb point üzerinde arama bölümü olmadığı için kendim salladım bu kısmı.\n\n    };\n    const mainQuery = new URLSearchParams(mainParameters);\n    api({\n      url: HOST + '?' + mainQuery\n    }).then(async res => {\n      if (res.Response === 'True') {\n        let fullyData = [];\n        await asyncForEach(res.Search, async item => {\n          const itemParameters = {\n            apikey: API_KEY,\n            plot: 'short',\n            type: 'movie',\n            r: 'json',\n            i: item.imdbID\n          };\n          const itemQuery = new URLSearchParams(itemParameters);\n          const response = await api({\n            url: HOST + '?' + itemQuery\n          });\n          let itemData = JSON.parse(JSON.stringify(response));\n          fullyData.push(itemData);\n        });\n        setPopularFilms(fullyData);\n      } else {\n        setErr({\n          message: res['Error']\n        });\n      }\n    }).catch(err => {\n      alert(err.message);\n    });\n  }, []);\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: style_container\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Create Next App\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  })), __jsx(\"main\", null, __jsx(Welcome, {\n    title: \"Welcome to MovieUP.\",\n    content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \",\n    toolbox: __jsx(Toolbox, {\n      button: {\n        label: \"Search\",\n        props: {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => search()\n        }\n      },\n      search: {\n        value: toolBoxSearchValue,\n        onChange: e => setToolBoxSearchValue(e.target.value)\n      },\n      year: {\n        key: \"toolboxYear\",\n        id: \"dropdown-item-button\",\n        title: \"Year\",\n        onChange: e => setYear(e.target.value),\n        data: [{\n          value: \"Any\",\n          default: true\n        }, {\n          value: \"2019\"\n        }, {\n          value: \"2020\"\n        }]\n      },\n      type: {\n        key: \"toolboxType\",\n        id: \"dropdown-item-button\",\n        title: \"Type\",\n        onChange: e => setType(e.target.value),\n        data: [{\n          value: \"Any\",\n          default: true\n        }, {\n          value: \"Series\"\n        }, {\n          value: \"Movie\"\n        }, {\n          value: \"Episode\"\n        }]\n      }\n    })\n  }), __jsx(\"div\", {\n    className: style_safeSpace\n  }), popularFilms && popularFilms.length ? __jsx(CardSlider, {\n    title: \"Popular Movies\"\n  }, popularFilms.map((film, filmIndex) => {\n    return __jsx(FilmCard, {\n      imdbID: film.imdbID,\n      index: filmIndex,\n      title: film.Title,\n      image: film.Poster,\n      content: film.Plot,\n      imdbPoint: film.imdbRating,\n      key: \"film-\" + filmIndex,\n      year: film.Year\n    });\n  })) : err ? err.message : __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      paddingTop: 40,\n      paddingBottom: 40,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontFamily: 'Poppins'\n    }\n  }, \"Y\\xFCkleniyor...\"), __jsx(\"div\", {\n    className: style_footerSpace\n  }))));\n};\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}