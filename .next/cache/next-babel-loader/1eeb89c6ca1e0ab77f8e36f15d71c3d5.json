{"ast":null,"code":"const defaultHeaders = {\n  \"Content-Type\": \"application/json\",\n  \"Accept-Encoding\": \"gzip, deflate\",\n  \"Accept-Language\": \"tr,tr-TR;q=0.9,en-US;q=0.8,en;q=0.7\",\n  \"Cache-Control\": \"max-age=0\",\n  \"Connection\": \"keep-alive\",\n  \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS\",\n  \"Access-Control-Allow-Headers\": \"Access-Control-Allow-Origin, Content-Type, Accept\"\n};\n\nconst api = ({\n  url,\n  parameters,\n  method = \"GET\",\n  headers = defaultHeaders\n}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, {\n      method,\n      body: JSON.stringify(parameters),\n      headers\n    }).then(res => {\n      return res.json();\n    }).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\n\nexport default api;","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/server/index.js"],"names":["defaultHeaders","api","url","parameters","method","headers","Promise","resolve","reject","fetch","body","JSON","stringify","then","res","json","catch","err"],"mappings":"AAAA,MAAMA,cAAc,GAAG;AACnB,kBAAgB,kBADG;AAEnB,qBAAmB,eAFA;AAGnB,qBAAmB,qCAHA;AAInB,mBAAiB,WAJE;AAKnB,gBAAc,YALK;AAMnB,YAAU,yIANS;AAOnB,iCAA+B,GAPZ;AAQnB,kCAAgC,oBARb;AASnB,kCAAgC;AATb,CAAvB;;AAWA,MAAMC,GAAG,GAAG,CAAC;AACTC,EAAAA,GADS;AAETC,EAAAA,UAFS;AAGTC,EAAAA,MAAM,GAAG,KAHA;AAITC,EAAAA,OAAO,GAAGL;AAJD,CAAD,KAKN;AACF,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,IAAAA,KAAK,CACDP,GADC,EAED;AACIE,MAAAA,MADJ;AAEIM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,UAAf,CAFV;AAGIE,MAAAA;AAHJ,KAFC,CAAL,CAQCQ,IARD,CAQOC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAVD,EAWCF,IAXD,CAWOC,GAAD,IAAS;AACXP,MAAAA,OAAO,CAACO,GAAD,CAAP;AACH,KAbD,EAcCE,KAdD,CAcQC,GAAD,IAAS;AACZT,MAAAA,MAAM,CAACS,GAAD,CAAN;AACH,KAhBD;AAiBH,GAlBM,CAAP;AAmBH,CAzBD;;AA0BA,eAAehB,GAAf","sourcesContent":["const defaultHeaders = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept-Encoding\": \"gzip, deflate\",\r\n    \"Accept-Language\": \"tr,tr-TR;q=0.9,en-US;q=0.8,en;q=0.7\",\r\n    \"Cache-Control\": \"max-age=0\",\r\n    \"Connection\": \"keep-alive\",\r\n    \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS\",\r\n    \"Access-Control-Allow-Headers\": \"Access-Control-Allow-Origin, Content-Type, Accept\"\r\n};\r\nconst api = ({\r\n    url,\r\n    parameters,\r\n    method = \"GET\",\r\n    headers = defaultHeaders\r\n}) => {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(\r\n            url,\r\n            {\r\n                method,\r\n                body: JSON.stringify(parameters),\r\n                headers\r\n            }\r\n        )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .then((res) => {\r\n            resolve(res);\r\n        })\r\n        .catch((err) => {\r\n            reject(err);\r\n        });\r\n    });\r\n};\r\nexport default api;"]},"metadata":{},"sourceType":"module"}