{"ast":null,"code":"var _jsxFileName = \"D:\\\\Works\\\\customer\\\\nextjs-blog\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport Logo from '../assets/images/logo.svg';\nimport Header from '../components/header';\nimport api from '../server';\nimport { API_KEY, HOST } from '../constants';\nimport style from './stylesheet';\nexport default function Home() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      films = _useState[0],\n      setFilms = _useState[1];\n\n  var _useState2 = useState(null),\n      err = _useState2[0],\n      setErr = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      searchValue = _useState3[0],\n      setSearchValue = _useState3[1];\n\n  useEffect(function () {\n    var parameters = {\n      \"apikey\": API_KEY,\n      \"s\": \"Yor\"\n    };\n    var query = new URLSearchParams(parameters);\n    api({\n      url: HOST + \"?\" + query\n    }).then(function (res) {\n      console.log(res);\n\n      if (res.Response === \"True\") {\n        setFilms(res.Search);\n      } else {\n        setErr({\n          message: res[\"Error\"]\n        });\n      }\n    })[\"catch\"](function (err) {\n      alert(err.message);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-\".concat(style.__hash),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Create Next App\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    className: \"jsx-\".concat(style.__hash),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    className: \"jsx-\".concat(style.__hash),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(Header, {\n    searchValue: searchValue,\n    onChageSearchText: function onChageSearchText(e) {\n      return setSearchValue(e.target.value);\n    },\n    image: {\n      image: Logo,\n      width: 150,\n      height: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), films && films.length ? films.map(function (film, filmIndex) {\n    console.log(film);\n    return __jsx(\"div\", {\n      key: \"films-\" + filmIndex,\n      className: \"jsx-\".concat(style.__hash) + \" \" + \"container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 22\n      }\n    }, __jsx(\"span\", {\n      className: \"jsx-\".concat(style.__hash) + \" \" + \"postTitle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, film.Title), __jsx(\"p\", {\n      className: \"jsx-\".concat(style.__hash) + \" \" + \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }));\n  }) : err ? err.message : \"Yükleniyor...\"), __jsx(_JSXStyle, {\n    id: style.__hash,\n    __self: this\n  }, style));\n}\n\n_s(Home, \"tSORTc8HrPiAxZWgeeAT/Nvp7Fo=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Works/customer/nextjs-blog/pages/index.js"],"names":["useEffect","useState","Head","Logo","Header","api","API_KEY","HOST","style","Home","films","setFilms","err","setErr","searchValue","setSearchValue","parameters","query","URLSearchParams","url","then","res","console","log","Response","Search","message","alert","e","target","value","image","width","height","length","map","film","filmIndex","Title"],"mappings":"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","sourcesContent":["import {\n  useEffect,\n  useState\n} from 'react';\nimport Head from 'next/head';\n\nimport Logo from '../assets/images/logo.svg';\nimport Header from '../components/header';\n\nimport api from '../server';\n\nimport {\n  API_KEY,\n  HOST\n} from '../constants';\n\nimport style from './stylesheet';\n\nexport default function Home() {\n  const [films, setFilms] = useState([]);\n  const [err, setErr] = useState(null);\n  const [searchValue, setSearchValue] = useState(\"\");\n  useEffect(() => {\n    const parameters = {\n      \"apikey\": API_KEY,\n      \"s\": \"Yor\"\n    };\n    const query = new URLSearchParams(parameters);\n    api({\n      url: HOST + \"?\" + query\n    })\n    .then((res) => {\n      console.log(res);\n      if(res.Response === \"True\") {\n        setFilms(res.Search);\n      } else {\n        setErr({\n          message: res[\"Error\"]\n        });\n      }\n    })\n    .catch((err) => {\n      alert(err.message);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>\n        <Logo/>\n        <Header\n          searchValue={searchValue}\n          onChageSearchText={(e) => setSearchValue(e.target.value)}\n          image={{\n            image: Logo,\n            width: 150,\n            height: \"auto\"\n          }}\n        />\n\n        {\n          films && films.length ?\n            films.map((film, filmIndex) => {\n              console.log(film);\n              return <div\n                key={\"films-\"+filmIndex}\n                className=\"container\"\n              >\n                <span className=\"postTitle\">\n                  {film.Title}\n                </span>\n                <p className=\"\">\n\n                </p>\n              </div>\n            })\n          :\n            err ? err.message : \"Yükleniyor...\"\n        }\n      </main>\n      <style jsx>{style}</style>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}