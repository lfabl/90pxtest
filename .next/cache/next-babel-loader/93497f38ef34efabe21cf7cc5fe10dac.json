{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Button, MenuItem, TextField } from '@material-ui/core';\nimport { container as style_container, table as style_table, content as style_content } from './index.module.css';\n\nconst Toolbox = ({\n  year,\n  type,\n  search,\n  button,\n  position\n}) => {\n  return __jsx(\"div\", {\n    className: style_container\n  }, __jsx(\"div\", {\n    className: style_table\n  }, __jsx(\"div\", {\n    className: style_content,\n    style: {\n      position: position ? position : \"absolute\",\n      width: position === \"relative\" ? \"auto\" : \"100%\",\n      bottom: position === \"relative\" ? \"initial\" : \"-135px\"\n    }\n  }, year && year.data ? __jsx(TextField, {\n    id: year.id,\n    label: year.title,\n    select: true,\n    style: {\n      width: \"20%\"\n    },\n    value: year.value,\n    onChange: year.onChange\n  }, year.data.map((item, index) => {\n    return __jsx(MenuItem, _extends({\n      key: year.key + index,\n      value: item.value\n    }, item.props), item.value);\n  })) : null, type && type.data ? __jsx(TextField, {\n    id: type.id,\n    label: type.title,\n    select: true,\n    style: {\n      width: \"20%\"\n    },\n    value: type.value,\n    onChange: type.onChange\n  }, type.data.map((item, index) => {\n    return __jsx(MenuItem, _extends({\n      key: type.key + index,\n      value: item.value\n    }, item.props), item.value);\n  })) : null, search ? __jsx(TextField, _extends({\n    label: \"Movie Name\",\n    value: search.value,\n    onChange: search.onChange\n  }, search.props, {\n    style: {\n      width: \"45%\"\n    },\n    onKeyUp: e => {\n      if (e.keyCode === 13 && button && button.props && button.props.onClick) {\n        button.props.onClick();\n      }\n    }\n  })) : null, button ? __jsx(Button, _extends({}, button.props, {\n    style: {\n      width: \"9%\",\n      marginTop: 10\n    }\n  }), button.label) : null)));\n};\n\nexport default Toolbox;","map":null,"metadata":{},"sourceType":"module"}